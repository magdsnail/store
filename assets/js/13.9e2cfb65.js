(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{428:function(a,e,s){"use strict";s.r(e);var t=s(2),n=Object(t.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"yaml语言教程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yaml语言教程"}},[a._v("#")]),a._v(" yaml语言教程")]),a._v(" "),e("h2",{attrs:{id:"睡觉了吗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#睡觉了吗"}},[a._v("#")]),a._v(" 睡觉了吗")]),a._v(" "),e("p",[a._v('YAML 是 "YAML Ain\'t a Markup Language"（YAML 不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是："Yet Another Markup Language"（仍是一种标记语言）。')]),a._v(" "),e("p",[a._v("YAML 的语法和其他高级语言类似，并且可以简单表达清单、散列表，标量等数据形态。它使用空白符号缩进和大量依赖外观的特色，特别"),e("strong",[a._v("适合用来表达或编辑数据结构、各种配置文件、倾印调试内容、文件大纲")]),a._v("（例如：许多电子邮件标题格式和YAML非常接近）。")]),a._v(" "),e("p",[a._v("YAML 的配置文件后缀为 "),e("strong",[a._v(".yml")]),a._v("，如："),e("strong",[a._v("runoob.yml")]),a._v(" 。")]),a._v(" "),e("blockquote",[e("p",[a._v("yaml常用来用作配置文件，和json类似")])]),a._v(" "),e("h2",{attrs:{id:"基本语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[a._v("#")]),a._v(" 基本语法")]),a._v(" "),e("ul",[e("li",[a._v("大小写敏感")]),a._v(" "),e("li",[a._v("使用缩进表示层级关系")]),a._v(" "),e("li",[a._v("缩进不允许使用tab，只允许空格")]),a._v(" "),e("li",[a._v("缩进的空格数不重要，只要相同层级的元素左对齐即可")]),a._v(" "),e("li",[a._v("'#'表示注释")])]),a._v(" "),e("h2",{attrs:{id:"数据类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[a._v("#")]),a._v(" 数据类型")]),a._v(" "),e("p",[a._v("YAML 支持以下几种数据类型：")]),a._v(" "),e("ul",[e("li",[e("strong",[a._v("对象")]),a._v("：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）")]),a._v(" "),e("li",[e("strong",[a._v("数组")]),a._v("：一组按次序排列的值，又称为序列（sequence） / 列表（list）")]),a._v(" "),e("li",[e("strong",[a._v("纯量")]),a._v("（scalars）：单个的、不可再分的值")])]),a._v(" "),e("h2",{attrs:{id:"yaml-对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yaml-对象"}},[a._v("#")]),a._v(" YAML 对象")]),a._v(" "),e("p",[a._v("对象的几种表示形式：")]),a._v(" "),e("p",[a._v("1、对象键值对使用冒号结构表示 "),e("strong",[a._v("key: value")]),a._v("，冒号后面要加一个空格。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("key: value\n")])])]),e("p",[a._v("2、也可以使用 "),e("strong",[a._v("key:{key1: value1, key2: value2, ...}")]),a._v("。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("key:{child-key1:value1,child-key2:value2}\n")])])]),e("p",[a._v("3、还可以使用缩进表示层级关系；")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("key: \n    child-key1: value1\n    child-key2: value2\n")])])]),e("p",[a._v("同2，只是表示形式不同。")]),a._v(" "),e("p",[a._v("4、较为复杂的对象格式，可以使用问号加一个空格代表一个复杂的 key，配合一个冒号加一个空格代表一个 value：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("?  \n    - complexkey1\n    - complexkey2\n:\n    - complexvalue1\n    - complexvalue2\n")])])]),e("p",[a._v("意思即对象的属性是一个数组 [complexkey1,complexkey2]，对应的值也是一个数组 [complexvalue1,complexvalue2]")]),a._v(" "),e("h2",{attrs:{id:"yaml-数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yaml-数组"}},[a._v("#")]),a._v(" YAML 数组")]),a._v(" "),e("p",[a._v("以 "),e("strong",[a._v("-")]),a._v(" 开头的行表示构成一个数组：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("- A\n- B\n- C\n")])])]),e("p",[a._v("YAML 支持多维数组，可以使用行内表示：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("key: [value1, value2, ...]\n")])])]),e("p",[a._v("数据结构的子成员是一个数组，则可以在该项下面缩进一个空格。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("-\n - A\n - B\n - C\n")])])]),e("p",[a._v("一个相对复杂的例子：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("companies:\n    -\n        id: 1\n        name: company1\n        price: 200W\n    -\n        id: 2\n        name: company2\n        price: 500W\n")])])]),e("p",[a._v("意思是 companies 属性是一个数组，每一个数组元素又是由 id、name、price 三个属性构成。")]),a._v(" "),e("p",[a._v("数组也可以使用流式(flow)的方式表示：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("companies: [{id: 1,name: company1,price: 200W},{id: 2,name: company2,price: 500W}]\n")])])]),e("h2",{attrs:{id:"复合结构-对象和数组组合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#复合结构-对象和数组组合"}},[a._v("#")]),a._v(" 复合结构（对象和数组组合）")]),a._v(" "),e("p",[a._v("数组和对象可以构成复合结构，例：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("languages:\n  - Ruby\n  - Perl\n  - Python \nwebsites:\n  YAML: yaml.org \n  Ruby: ruby-lang.org \n  Python: python.org \n  Perl: use.perl.org\n")])])]),e("p",[a._v("转换为 js 为：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("{ \n  languages: [ 'Ruby', 'Perl', 'Python'],\n  websites: {\n    YAML: 'yaml.org',\n    Ruby: 'ruby-lang.org',\n    Python: 'python.org',\n    Perl: 'use.perl.org' \n  } \n}\n")])])]),e("h2",{attrs:{id:"纯量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#纯量"}},[a._v("#")]),a._v(" 纯量")]),a._v(" "),e("p",[a._v("纯量是最基本的，不可再分的值，包括：")]),a._v(" "),e("ul",[e("li",[a._v("字符串")]),a._v(" "),e("li",[a._v("布尔值")]),a._v(" "),e("li",[a._v("整数")]),a._v(" "),e("li",[a._v("浮点数")]),a._v(" "),e("li",[a._v("Null")]),a._v(" "),e("li",[a._v("时间")]),a._v(" "),e("li",[a._v("日期")])]),a._v(" "),e("p",[a._v("使用一个例子来快速了解纯量的基本使用：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("boolean: # 布尔值\n    - TRUE  #true,True都可以\n    - FALSE  #false，False都可以\nfloat: # 浮点数\n    - 3.14\n    - 6.8523015e+5  #可以使用科学计数法\nint: # 整数\n    - 123\n    - 0b1010_0111_0100_1010_1110    #二进制表示\nnull: # Null\n    nodeName: 'node'\n    parent: ~  #使用~表示null\nstring: # 字符串\n    - 哈哈 # 字符串默认不使用引号表示\n    - 'Hello world'  #可以使用双引号或者单引号包裹特殊字符\n    - newline\n      newline2    #字符串可以拆成多行，每一行会被转化成一个空格\ndate:\n    - 2018-02-17    #日期必须使用ISO 8601格式，即yyyy-MM-dd\ndatetime: \n    -  2018-02-17T15:02:31+08:00    #时间使用ISO 8601格式，时间和日期之间使用T连接，最后使用+代表时区\n")])])]),e("p",[a._v("多行字符串可以使用"),e("code",[a._v("|")]),a._v("保留换行符，也可以使用"),e("code",[a._v(">")]),a._v("折叠换行。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("this: |\n  Foo\n  Bar\nthat: >\n  Foo\n  Bar\n")])])]),e("p",[a._v("转为js代码如下。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("{ this: 'Foo\\nBar\\n', that: 'Foo Bar\\n' }\n")])])]),e("p",[e("code",[a._v("+")]),a._v("表示保留文字块末尾的换行，"),e("code",[a._v("-")]),a._v("表示删除字符串末尾的换行。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("s1: |\n  Foo\n \ns2: |+\n  Foo\n \n \ns3: |-\n  Foo\n")])])]),e("p",[a._v("转为json代码如下")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("{ s1: 'Foo\\n', s2: 'Foo\\n\\n\\n', s3: 'Foo' }\n")])])]),e("p",[a._v("字符串之中可以插入 HTML 标记。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('message: |\n  <p style="color: red">\n    段落\n  </p>\n')])])]),e("h2",{attrs:{id:"转换数据格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#转换数据格式"}},[a._v("#")]),a._v(" 转换数据格式")]),a._v(" "),e("p",[a._v("允许使用两个感叹号，强制转换数据类型。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("e: !!str 123\nf: !!str true\n")])])]),e("p",[a._v("转换js结果同：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("{ e: '123', f: 'true' }\n")])])]),e("h2",{attrs:{id:"锚点引用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#锚点引用"}},[a._v("#")]),a._v(" 锚点引用")]),a._v(" "),e("p",[e("strong",[a._v("&")]),a._v(' 锚点和< span class="marked">* 别名，可以用来引用:')]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("defaults: &defaults # 添加锚点\n  adapter:  postgres\n  host:     localhost\n\ndevelopment:\n  database: myapp_development\n  <<: *defaults # <<表示合并，*引用锚点\n\ntest:\n  database: myapp_test\n  <<: *defaults # <<表示合并，*引用锚点\n")])])]),e("p",[a._v("相当于:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("defaults:\n  adapter:  postgres\n  host:     localhost\n\ndevelopment:\n  database: myapp_development\n  adapter:  postgres\n  host:     localhost\n\ntest:\n  database: myapp_test\n  adapter:  postgres\n  host:     localhost\n")])])]),e("p",[e("strong",[a._v("&")]),a._v(" 用来建立锚点（defaults），"),e("strong",[a._v("<<")]),a._v(" 表示合并到当前数据，***** 用来引用锚点。")]),a._v(" "),e("p",[a._v("下面是另一个例子:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("- &showell Steve \n- Clark \n- Brian \n- Oren \n- *showell \n")])])]),e("p",[a._v("转为js代码如下:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("[ 'Steve', 'Clark', 'Brian', 'Oren', 'Steve' ]\n")])])]),e("blockquote",[e("p",[a._v("参考：")]),a._v(" "),e("ul",[e("li",[a._v("yaml官网：https://yaml.org/")]),a._v(" "),e("li",[a._v("yaml与js的转换demo：http://nodeca.github.io/js-yaml/")]),a._v(" "),e("li",[a._v("菜鸟教程：https://www.ruanyifeng.com/blog/2016/07/yaml.html")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);